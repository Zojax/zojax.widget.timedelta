================
Timedelta Widget
================

  >>> from zope.interface.verify import verifyClass
  >>> from z3c.form import interfaces
  >>> from zojax.widget.timedelta.widget import TimedeltaWidget
  >>> from zojax.widget.timedelta.interfaces import ITimedeltaWidget

  >>> verifyClass(interfaces.IWidget, TimedeltaWidget)
  True

The widget can be instantiated only using the request:

  >>> from z3c.form.testing import TestRequest
  >>> request = TestRequest()

  >>> widget = TimedeltaWidget(request)

Before rendering the widget, one has to set the name and id of the widget:

  >>> widget.id = 'widget-id'
  >>> widget.name = 'widget.name'

We also need to register the template for at least the widget and request:

  >>> from zope import component
  >>> from zope.pagetemplate.interfaces import IPageTemplate
  >>> from z3c.form.widget import WidgetTemplateFactory
  >>> from zojax.widget.timedelta.tests import getPath

  >>> component.provideAdapter(
  ...     WidgetTemplateFactory(getPath('widget_input.pt'), 'text/html'),
  ...     (None, None, None, None, ITimedeltaWidget),
  ...     IPageTemplate, name=interfaces.INPUT_MODE)

If we render the widget we get an emtpy widget:

  >>> widget.update()
  >>> print widget.render()
    <span id="widget-id">
      <select id="widget-id-hour" name="widget.name.hour">
        <option value="--">--</option>
        <option value="0">0</option>
        <option value="1">1</option>
        <option value="2">2</option>
        <option value="3">3</option>
        <option value="4">4</option>
        <option value="5">5</option>
        <option value="6">6</option>
        <option value="7">7</option>
        <option value="8">8</option>
        <option value="9">9</option>
        <option value="10">10</option>
        <option value="11">11</option>
        <option value="12">12</option>
        <option value="13">13</option>
        <option value="14">14</option>
        <option value="15">15</option>
      </select>
      &nbsp;:&nbsp;
      <select id="widget-id-minute" name="widget.name.minute">
        <option value="0">0</option>
        <option value="15">15</option>
        <option value="30">30</option>
        <option value="45">45</option>
      </select>
    </span>


  >>> widget.hourMin = 5
  >>> widget.minuteStep = 10
  >>> widget.update()
  >>> print widget.render()
    <span id="widget-id">
      <select id="widget-id-hour" name="widget.name.hour">
        <option value="--">--</option>
        <option value="5">5</option>
        <option value="6">6</option>
        <option value="7">7</option>
        <option value="8">8</option>
        <option value="9">9</option>
        <option value="10">10</option>
        <option value="11">11</option>
        <option value="12">12</option>
        <option value="13">13</option>
        <option value="14">14</option>
        <option value="15">15</option>
      </select>
      &nbsp;:&nbsp;
      <select id="widget-id-minute" name="widget.name.minute">
        <option value="0">0</option>
        <option value="10">10</option>
        <option value="20">20</option>
        <option value="30">30</option>
        <option value="40">40</option>
        <option value="50">50</option>
      </select>
    </span>


If we select item "b", then it should be selected:

    >>> widget.value = [10, 30]
    >>> widget.update()
    >>> print widget.render()
    <span id="widget-id">
      <select id="widget-id-hour" name="widget.name.hour">
        <option value="--">--</option>
        <option value="5">5</option>
        <option value="6">6</option>
        <option value="7">7</option>
        <option value="8">8</option>
        <option value="9">9</option>
        <option selected="selected" value="10">10</option>
        <option value="11">11</option>
        <option value="12">12</option>
        <option value="13">13</option>
        <option value="14">14</option>
        <option value="15">15</option>
      </select>
      &nbsp;:&nbsp;
      <select id="widget-id-minute" name="widget.name.minute">
        <option value="0">0</option>
        <option value="10">10</option>
        <option value="20">20</option>
        <option selected="selected" value="30">30</option>
        <option value="40">40</option>
        <option value="50">50</option>
      </select>
    </span>

Let's now make sure that we can extract user entered data from a widget:

  >>> widget.request = TestRequest(
  ...     form={'widget.name.hour': '11', 'widget.name.minute': '40'})
  >>> widget.update()
  >>> widget.extract()
  [11, 40]

  >>> widget.request = TestRequest(
  ...     form={'widget.name.hour': '--', 'widget.name.minute': '40'})
  >>> widget.update()
  >>> widget.extract()
  [None, 40]

  >>> print widget.render()
  <span id="widget-id">
      <select id="widget-id-hour" name="widget.name.hour">
        <option value="--">--</option>
        <option value="5">5</option>
        <option value="6">6</option>
        <option value="7">7</option>
        <option value="8">8</option>
        <option value="9">9</option>
        <option value="10">10</option>
        <option value="11">11</option>
        <option value="12">12</option>
        <option value="13">13</option>
        <option value="14">14</option>
        <option value="15">15</option>
      </select>
      &nbsp;:&nbsp;
      <select id="widget-id-minute" name="widget.name.minute">
        <option value="0">0</option>
        <option value="10">10</option>
        <option value="20">20</option>
        <option value="30">30</option>
        <option selected="selected" value="40">40</option>
        <option value="50">50</option>
      </select>
  </span>


  >>> widget.request = TestRequest(
  ...     form={'widget.name.hour': '11', 'widget.name.minute': 'unknown'})
  >>> widget.update()
  >>> widget.extract()
  <NO_VALUE>

When "no value" is selected, then no verification against the terms is done:

  >>> widget.request = TestRequest(form={'widget.name.hour': ['--']})
  >>> widget.update()
  >>> widget.extract()
  <NO_VALUE>

If nothing is found in the request, the default is returned:

  >>> widget.request = TestRequest()
  >>> widget.update()
  >>> widget.extract(default=1)
  1

Let's now make sure that a bogus value causes extract to return the default as
described by the interface:

  >>> widget.request = TestRequest(form={'widget.name': ['x']})
  >>> widget.update()
  >>> widget.extract(default=1)
  1


timedelta field
---------------

  >>> from zojax.widget.timedelta.field import Timedelta
  >>> from zojax.widget.timedelta.widget import TimedeltaFieldWidget
  
  >>> component.provideAdapter(TimedeltaFieldWidget)

  >>> field = Timedelta(title=u'Timedelta')
  >>> widget = component.getMultiAdapter(
  ...     (field, request), interface=interfaces.IFieldWidget)
  >>> ITimedeltaWidget.providedBy(widget)
  True

  >>> widget.update()
  >>> print widget.render()
  <span id="" klass="required">
      <select id="-hour" name=".hour">
        <option value="--">--</option>
        <option value="0">0</option>
        <option value="1">1</option>
        <option value="2">2</option>
        <option value="3">3</option>
        <option value="4">4</option>
        <option value="5">5</option>
        <option value="6">6</option>
        <option value="7">7</option>
        <option value="8">8</option>
        <option value="9">9</option>
        <option value="10">10</option>
        <option value="11">11</option>
        <option value="12">12</option>
        <option value="13">13</option>
        <option value="14">14</option>
        <option value="15">15</option>
      </select>
      &nbsp;:&nbsp;
      <select id="-minute" name=".minute">
        <option value="0">0</option>
        <option value="15">15</option>
        <option value="30">30</option>
        <option value="45">45</option>
      </select>
  </span>


  >>> from datetime import timedelta
  >>> from z3c.form.interfaces import NOVALUE
  >>> from zojax.widget.timedelta.widget import TimedeltaDataConverter

  >>> converter = TimedeltaDataConverter(field, widget)

  >>> converter.toWidgetValue(timedelta(0, 3700))
  [1, 1]

  >>> converter.toWidgetValue(None)
  [None, None]

  >>> converter.toFieldValue([10, 30])
  datetime.timedelta(0, 37800)

  >>> print converter.toFieldValue([10, 'ss'])
  None

  >>> print converter.toFieldValue(NOVALUE)
  None

